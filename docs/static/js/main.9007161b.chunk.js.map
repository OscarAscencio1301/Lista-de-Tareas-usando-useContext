{"version":3,"sources":["components/TodoContext.js","components/AppLista.js","components/Formulario.js","hooks/useForm.js","components/NavBar.js","components/AppRouter.js","components/helpers/reducer.js","components/Control.js","index.js"],"names":["TareasContext","createContext","AppLista","useContext","tareas","dispatch","useEffect","localStorage","setItem","JSON","stringify","className","map","tarea","onClick","tareaId","id","type","payload","finalizado","Formulario","valoresIniciales","useState","valores","setvalores","e","preventDefault","target","name","value","useForm","info","recibirValores","placeholder","onChange","to","trim","length","nuevaTarea","Date","now","NavBar","exact","activeClassName","AppRouter","path","component","reducer","state","action","filter","init","parse","getItem","Control","useReducer","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9007161b.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const TareasContext = createContext(null);","import React, { useContext, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { TareasContext } from './TodoContext'\r\n\r\nexport const AppLista = () => {\r\n    let {tareas,dispatch} = useContext(TareasContext)\r\n    \r\n\r\n    useEffect(() => {\r\n       localStorage.setItem(\"tareasCompletadas\", JSON.stringify(tareas))\r\n    }, [tareas]);\r\n\r\n    const finalizada = tareaId => {\r\n        dispatch({\r\n            type: 'finalizado',\r\n            payload: tareaId\r\n        })\r\n    }\r\n    const borrar = tareaId => {\r\n        dispatch({\r\n            type:'borrar', \r\n            payload: tareaId})\r\n    }\r\n   \r\n    \r\n    return (\r\n        <div className=\"datos\">\r\n            <h1 className=\"tituloPrincipal\">Lista</h1>\r\n            <hr />\r\n            <ol className=\"list-group\">\r\n                {\r\n                tareas.map(tarea => \r\n                    <li\r\n                        key={tarea.id}\r\n                        className=\"list-group-item item px-5\">\r\n                        <p\r\n                            onClick={() => finalizada(tarea.id)}\r\n                            className={`${tarea.finalizado ? 'completado' : null}`}>{tarea.tarea}</p>\r\n                        <div>\r\n                            <button className=\"btn btn-danger boton\" onClick={() => borrar(tarea.id)}   \r\n                           >Borrar</button>\r\n                        </div>\r\n                </li>)\r\n                }\r\n               \r\n                \r\n                \r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../hooks/useForm';\r\nimport { TareasContext } from './TodoContext'\r\n\r\nexport const Formulario = () => {\r\n    const {dispatch} = useContext(TareasContext);\r\n\r\n    let  [{info}, recibirValores] =useForm({\r\n        info: ''\r\n    })\r\n\r\n    const validarTarea = (e) => {\r\n       \r\n        if(info.trim().length <=1 ){\r\n            return\r\n        }\r\n        const nuevaTarea = {\r\n            id: Date.now(),\r\n            tarea: info,\r\n            finalizado: false\r\n        }\r\n      \r\n      dispatch({\r\n        type: 'agregar',\r\n        payload: nuevaTarea\r\n      })\r\n        \r\n    }\r\n   \r\n    return (\r\n        <div className=\"datos\">\r\n            <h1 className=\"tituloPrincipal\">Agregar Tarea</h1>\r\n            <hr />\r\n            <form>\r\n                <input\r\n                    className=\"d-block w-100 form-control my-4\" \r\n                    type=\"text\"\r\n                    name=\"info\"\r\n                    placeholder=\"Tirar la Basura...\"\r\n                    value={info}\r\n                    onChange={recibirValores}\r\n                />\r\n                <Link to=\"/\"\r\n                    \r\n                    className=\"btn btn-primary d-block w-100\"\r\n                    onClick={validarTarea}\r\n                >Agregar</Link>            \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (valoresIniciales = {}) => {\r\n    const [valores, setvalores] = useState(valoresIniciales)\r\n    \r\n    const recibirValores = (e) => {\r\n        e.preventDefault();\r\n        setvalores({\r\n            ...valores,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    return [valores, recibirValores]\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport const NavBar = () => {\r\n    return (\r\n        <div className=\"nav\">\r\n            <h2 className=\"titulo\">App Lista de Tareas</h2>\r\n            <NavLink exact activeClassName=\"activo\" to=\"/\" className=\"link\">Tareas</NavLink>\r\n            <NavLink exact activeClassName=\"activo\" to=\"/formulario\" className=\"link\">Ingresar Tarea</NavLink>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {BrowserRouter as Router, Redirect, Route, Switch} from 'react-router-dom'\r\nimport { AppLista } from './AppLista'\r\nimport { Formulario } from './Formulario'\r\nimport { NavBar } from './NavBar'\r\nexport const AppRouter = () => {\r\n    return (\r\n       <Router>\r\n       <div className=\"contain\">\r\n           <div className=\"item1\">\r\n               <NavBar />\r\n           </div>\r\n           <div className=\"item2\">\r\n               <Switch>\r\n                   <Route exact path=\"/\" component={AppLista}/>\r\n                   <Route exact path=\"/formulario\" component={Formulario}/>\r\n                   <Redirect to=\"/\" />\r\n               </Switch>\r\n           </div>\r\n        </div>\r\n       </Router>\r\n    )\r\n}\r\n","export const reducer = (state={}, action) => {\r\n switch (action.type) {\r\n     case 'agregar':\r\n        return [...state, action.payload]\r\n    case 'borrar':\r\n        return state.filter(tarea => tarea.id !== action.payload)\r\n    case 'finalizado':\r\n        return state.map(tarea => tarea.id === action.payload ? {...tarea,finalizado: !tarea.finalizado}: tarea)\r\n     default:\r\n        return state;\r\n }\r\n\r\n    \r\n} ","import React, { useReducer, useState } from 'react'\r\nimport { AppRouter } from './AppRouter'\r\nimport { reducer } from './helpers/reducer'\r\nimport { TareasContext } from './TodoContext'\r\n\r\nconst init = () =>{\r\n  return JSON.parse(localStorage.getItem(\"tareasCompletadas\")) || []\r\n}\r\nexport const Control = () => {\r\n  const [tareas, dispatch] = useReducer(reducer, [], init)\r\n  \r\n    return (\r\n        <div>\r\n        <TareasContext.Provider value={{\r\n          tareas,\r\n          dispatch\r\n        }}>\r\n          <AppRouter /> \r\n        </TareasContext.Provider> \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Control } from './components/Control';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Control />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}